<%- include('../../views/partial/user/header', { user: user }) %>

<div class="container mt-5">
    <div class="checkout-progress mb-5">
        <div class="progress-step active">
            <div class="step-icon">üì¶</div>
            <span>Cart Review</span>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step">
            <div class="step-icon">üè†</div>
            <span>Address</span>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step">
            <div class="step-icon">üí≥</div>
            <span>Payment</span>
        </div>
    </div>

    <div class="row g-4">
        <!-- Left Column for Address -->
        <div class="col-md-5">
            <div class="checkout-card address-section">
                <div class="card-header">
                    <h5><i class="fas fa-map-marker-alt me-2"></i>Shipping Address</h5>
                </div>
                <div class="card-body">
                    <!-- List of Addresses with Radio Buttons -->
                    <% addresses.forEach(function(address, index) { %>
                        <div class="address-card mb-3" data-aos="fade-right" data-aos-delay="<%= index * 100 %>">
                            <div class="address-radio">
                                <input type="radio" name="selected_address" id="address<%= index %>" value="<%= address._id %>" <%=index === 0 ? 'checked' : '' %>>
                                <label for="address<%= index %>" class="address-content">
                                    <div class="address-type"><%= address.type %></div>
                                    <div class="recipient"><%= address.Firstname %></div>
                                    <div class="address-details">
                                        <%= address.street %><br>
                                        <%= address.city %>, <%= address.state %> <%= address.pin %>
                                    </div>
                                </label>
                            </div>
                            <div class="address-actions">
                                <a href="/editAddressPage/<%= address._id %>" class="btn btn-edit">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            </div>
                        </div>
                    <% }) %>

                    <a href="/manageAddress" class="btn btn-add-address mt-3">
                        <i class="fas fa-plus me-2"></i>Add New Address
                    </a>
                </div>
            </div>
        </div>

        <!-- Right Column for Order Review -->
        <div class="col-md-7">
            <div class="checkout-card order-review">
                <div class="card-header">
                    <h4><i class="fas fa-shopping-bag me-2"></i>Your Orders</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive order-table">
                        <table class="table">
                          <thead>
                            <tr>
                              <th colspan="2">Product</th>
                              <th>Total</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% if (products && products.length > 0) { %>
                              <% products.forEach(productEntry => { %>
                                <tr>
                                  <td class="image product-thumbnail">
                                    <img src="/uploads/re-image/<%= productEntry.productId.images[0] %>" alt="<%= productEntry.productId.productName %>">
                                  </td>
                                  <td>
                                    <h5><a href="shop-product-full.html"><%= productEntry.productId.productName %></a></h5>
                                    <span class="product-qty">x <%= productEntry.quantity %></span>
                                  </td>
                                  <td><%= productEntry.subtotal.toFixed(2) %></td>
                                </tr>

                                <script>
                                    const totalAmount = '<%= cart.totalAmount %>';
                                    console.log("Grand Total:", totalAmount);
                                </script>
                              <% }) %>
                            <% } else { %>
                              <tr>
                                <td colspan="3">Your cart is empty.</td>
                              </tr>
                            <% } %>
                            
                            <tr>
                              <th>SubTotal</th>
                              <td class="product-subtotal" colspan="2"><span id="subtotal"><%= cartTotals.total.toFixed(2) %></span></td>
                            </tr>
                            
                            <tr>
                              <th>Discount</th>
                              <td colspan="2"><span id="discountAmount"><%= cart.discountAmount ? cart.discountAmount.toFixed(2) : '0.00' %></span></td>
                            </tr>
                      
                            <tr>
                              <th>Final Total</th>
                              <td colspan="2">
                                <span id="finalTotal">
                                  <%= cartTotals && cartTotals.finalTotal ? cartTotals.finalTotal.toFixed(2) : '0.00' %>
                                </span>
                              </td>
                            </tr>
                            
                            <tr>
                              <th>Shipping</th>
                              <td colspan="2"><em>Free Shipping</em></td>
                            </tr>
                      
                     
                          </tbody>
                        </table>
                      </div>
                      
                    <!-- Coupons Section -->
                    <div class="coupon-container">
                        <form id="couponForm">
                            <div class="coupon-input-group">
                                <input type="text" id="couponCode" name="couponCode" class="form-control" placeholder="Enter Coupon Code" required>
                                <input type="hidden" id="orderValue" name="orderValue" value="<%= cartTotals.total.toFixed(2) %>">
                                <input type="hidden" id="userId" name="userId" value="<%= userId %>">
                            </div>
                            <div class="coupon-button-group">
                                <button type="button" class="btn-coupon btn-apply" onclick="applyCoupon()">
                                    <i class="fas fa-check"></i> Apply Coupon
                                </button>
                                <% if (cart.discountAmount) { %>
                                <button type="button" class="btn-coupon btn-remove" onclick="removeCoupon('<%= userId %>')">
                                    <i class="fas fa-times"></i> Remove Coupon
                                </button>
                                <% } %>
                            </div>
                        </form>
                        <button type="button" class="btn-view-all-coupons" data-toggle="modal" data-target="#couponModal">
                            <i class="fas fa-tags"></i> View Available Coupons
                        </button>
                    </div>

                    <style>
                    .coupon-container {
                        background: white;
                        border-radius: 12px;
                        padding: 20px;
                        margin: 20px 0;
                        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
                    }

                    .coupon-input-group {
                        margin-bottom: 15px;
                    }

                    .coupon-input-group input {
                        width: 100%;
                        padding: 12px 15px;
                        border: 2px solid #e2e8f0;
                        border-radius: 8px;
                        font-size: 14px;
                        transition: all 0.3s ease;
                    }

                    .coupon-input-group input:focus {
                        border-color: #006A67;
                        box-shadow: 0 0 0 3px rgba(0,106,103,0.1);
                        outline: none;
                    }

                    .coupon-button-group {
                        display: flex;
                        gap: 10px;
                        margin-bottom: 15px;
                    }

                    .btn-coupon {
                        flex: 1;
                        padding: 10px 20px;
                        border: none;
                        border-radius: 8px;
                        font-weight: 500;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 8px;
                        transition: all 0.3s ease;
                    }

                    .btn-apply {
                        background: linear-gradient(135deg, #006A67, #00857f);
                        color: white;
                    }

                    .btn-remove {
                        background: linear-gradient(135deg, #dc3545, #e74c3c);
                        color: white;
                    }

                    .btn-coupon:hover {
                        transform: translateY(-2px);
                        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
                    }

                    .btn-view-all-coupons {
                        width: 100%;
                        padding: 12px;
                        background: transparent;
                        border: 2px dashed #006A67;
                        color: #006A67;
                        border-radius: 8px;
                        font-weight: 500;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 8px;
                        transition: all 0.3s ease;
                    }

                    .btn-view-all-coupons:hover {
                        background: rgba(0,106,103,0.1);
                    }

                    @media (max-width: 768px) {
                        .coupon-button-group {
                            flex-direction: column;
                        }
                    }
                    </style>

                    <div class="bt-1 border-color-1 mt-3 mb-3"></div>

                    <div class="payment_method">
                        <div class="mb-3">
                            <h5>Payment</h5>
                            <!-- Wallet Payment Option -->
                            <div class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" value="wallet" id="exampleRadios3">
                                <label class="form-check-label" for="exampleRadios3">Wallet</label>
                            </div>
                            <!-- Cash on Delivery Option -->
                            <div class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" value="COD" id="exampleRadios4" checked>
                                <label class="form-check-label" for="exampleRadios4">Cash on Delivery</label>
                            </div>
                            <!-- Razorpay Option -->
                            <div class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="exampleRadios5" value="razorpay">
                                <label class="form-check-label" for="exampleRadios5">Razorpay</label>
                            </div>
                        </div>
                        <!-- Buttons -->
                        <div id="razorpayButtonContainer" class="hidden">
                            <button type="submit" class="btn btn-fill-out btn-block mt-3" id="onlinePayment">Place Order</button>
                        </div>
                        <div id="codButtonContainer">
                            <button type="submit" class="btn btn-fill-out btn-block mt-3" id="placeOrderBtn">Place Order</button>
                        </div>
                    </div>
                    
                </div>

                <!-- Coupon Form -->
                
            </div>
        </div>
    </div>
</div>

        <tr>
        <td colspan="3">
            <!-- <div class="coupon_item" >
            
                <button class="btn btn-sm btn-danger" onclick="removeCoupon('<%= userId %>')" 
                style="position: absolute;
                  right: 20%;
                  bottom: -2%;">Remove Coupon</button>

            </div> -->
        </td>
        </tr>


<!-- Modal for Coupons -->
<div class="modal fade" id="couponModal" tabindex="-1" role="dialog" aria-labelledby="couponModalLabel" aria-hidden="true">
   <div class="modal-dialog" role="document">
       <div class="modal-content">
           <div class="modal-header">
               <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
               <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                   <span aria-hidden="true">&times;</span>
               </button>
           </div>
           <div class="modal-body">
<!-- If no coupon is applied, show available coupons -->
                <% coupons.forEach(function(coupon) { %>
                    <div class="coupon_item">
                        <p><%= coupon.couponCode %> - <%= coupon.description %></p>
                        <button class="btn btn-sm btn-primary" onclick="copyCoupon('<%= coupon.couponCode %>')">Copy</button>
                    </div>
                <% }) %>
     
        </div>
        
            
       </div>
   </div>
</div>

<style>
    /* Modern Checkout Styles */
    .checkout-progress {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 3rem;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        z-index: 1;
    }

    .step-icon {
        width: 50px;
        height: 50px;
        background: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

    .progress-step.active .step-icon {
        transform: scale(1.1);
        box-shadow: 0 6px 20px rgba(0,106,103,0.2);
    }

    .progress-line {
        flex: 1;
        height: 3px;
        background: linear-gradient(90deg, #006A67 50%, #e2e8f0 50%);
        margin: 0 1rem;
        position: relative;
        max-width: 100px;
    }

    .checkout-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 30px rgba(0,0,0,0.08);
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .checkout-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0,0,0,0.12);
    }

    .card-header {
        background: linear-gradient(135deg, #006A67, #00857f);
        padding: 1.5rem;
        color: white;
        border: none;
    }

    .card-header h4, .card-header h5 {
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    /* Address Card Styles */
    .address-card {
        background: #f8fafc;
        border-radius: 12px;
        padding: 1.2rem;
        margin-bottom: 1rem;
        transition: all 0.3s ease;
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        border: 2px solid transparent;
    }

    .address-card:hover {
        border-color: #006A67;
        transform: translateX(5px);
    }

    .address-radio {
        display: flex;
        gap: 1rem;
        flex: 1;
    }

    .address-radio input[type="radio"] {
        width: 20px;
        height: 20px;
        border: 2px solid #006A67;
        border-radius: 50%;
        appearance: none;
        position: relative;
        margin-top: 0.2rem;
    }

    .address-radio input[type="radio"]:checked {
        background: #006A67;
    }

    .address-radio input[type="radio"]:checked::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
    }

    .address-content {
        flex: 1;
        cursor: pointer;
    }

    .address-type {
        display: inline-block;
        padding: 0.3rem 0.8rem;
        background: rgba(0,106,103,0.1);
        color: #006A67;
        border-radius: 20px;
        font-size: 0.85rem;
        margin-bottom: 0.5rem;
    }

    .recipient {
        font-weight: 600;
        color: #1a202c;
        margin-bottom: 0.3rem;
    }

    .address-details {
        color: #64748b;
        font-size: 0.95rem;
        line-height: 1.5;
    }

    .address-actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn-edit {
        padding: 0.5rem 1rem;
        border-radius: 8px;
        background: white;
        color: #006A67;
        border: 2px solid #006A67;
        transition: all 0.3s ease;
    }

    .btn-edit:hover {
        background: #006A67;
        color: white;
    }

    .btn-add-address {
        width: 100%;
        padding: 1rem;
        border-radius: 12px;
        background: linear-gradient(135deg, #006A67, #00857f);
        color: white;
        border: none;
        font-weight: 500;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-add-address:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,106,103,0.2);
    }

    @media (max-width: 768px) {
        .checkout-progress {
            flex-direction: column;
            gap: 1rem;
        }

        .progress-line {
            width: 3px;
            height: 30px;
            margin: 0.5rem 0;
        }

        .address-card {
            flex-direction: column;
            gap: 1rem;
        }

        .address-actions {
            width: 100%;
        }

        .btn-edit {
            width: 100%;
        }
    }

    /* Animation Classes */
    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-slide-in {
        animation: slideIn 0.5s ease forwards;
    }

    [data-aos] {
        opacity: 0;
        transition: all 0.6s ease;
    }

    [data-aos].aos-animate {
        opacity: 1;
    }

    /* Modern Order Table Styles */
    .order-table {
        margin: 2rem 0;
    }

    .table {
        border-collapse: separate;
        border-spacing: 0 0.5rem;
        background: transparent;
    }

    .table thead th {
        background: linear-gradient(135deg, #006A67, #00857f);
        color: white;
        padding: 1.2rem 1.5rem;
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.9rem;
        letter-spacing: 0.5px;
        border: none;
    }

    .table thead th:first-child {
        border-radius: 12px 0 0 12px;
    }

    .table thead th:last-child {
        border-radius: 0 12px 12px 0;
    }

    .table tbody tr {
        background: white;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        border-radius: 12px;
        transition: all 0.3s ease;
    }

    .table tbody tr:hover {
        transform: translateX(5px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .table td {
        padding: 1.2rem 1.5rem;
        border: none;
        vertical-align: middle;
    }

    .product-thumbnail img {
        width: 80px;
        height: 80px;
        border-radius: 10px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .table tr:hover .product-thumbnail img {
        transform: scale(1.1);
    }

    .table h5 {
        margin: 0 0 0.5rem 0;
        font-size: 1rem;
        font-weight: 600;
    }

    .table h5 a {
        color: #2d3436;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .table h5 a:hover {
        color: #006A67;
    }

    .product-qty {
        color: #64748b;
        font-size: 0.9rem;
    }

    /* Summary Rows */
    .table tr.summary-row {
        background: #f8fafc;
    }

    .table tr.summary-row th {
        font-weight: 600;
        color: #1a202c;
        background: transparent;
    }

    .table tr.summary-row td {
        font-weight: 600;
        color: #2d3436;
        text-align: right;
    }

    .table tr.final-total {
        background: linear-gradient(135deg, #f0fdf4, #dcfce7);
    }

    .table tr.final-total th {
        color: #166534;
    }

    .table tr.final-total td {
        color: #166534;
        font-size: 1.2rem;
    }

    /* Remove Coupon Button */
    .btn-remove-coupon {
        background: linear-gradient(135deg, #dc3545, #e74c3c);
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        transition: all 0.3s ease;
        float: right;
        margin-left: 1rem;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

    .btn-remove-coupon:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(220,53,69,0.2);
        color: white;
    }

    .btn-remove-coupon i {
        font-size: 0.8rem;
    }

    /* Empty Cart Message */
    .empty-cart {
        text-align: center;
        padding: 2rem;
        color: #64748b;
        font-style: italic;
    }

    /* Payment Method Styles */
    .payment_method {
        margin-top: 2rem;
        padding: 1.5rem;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .payment_method h5 {
        color: #1a202c;
        font-weight: 600;
        margin-bottom: 1.5rem;
    }

    .custome-radio {
        margin-bottom: 1rem;
        padding: 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .custome-radio:hover {
        background: #f8fafc;
    }

    .custome-radio input[type="radio"] {
        margin-right: 0.5rem;
    }

    .custome-radio label {
        color: #2d3436;
        font-weight: 500;
        cursor: pointer;
    }

    /* Place Order Button */
    .btn-fill-out {
        background: linear-gradient(135deg, #006A67, #00857f);
        color: white;
        padding: 1rem 2rem;
        border-radius: 30px;
        font-weight: 500;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: none;
        width: 100%;
        margin-top: 1rem;
    }

    .btn-fill-out:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,106,103,0.2);
    }

    @media (max-width: 768px) {
        .table {
            border-spacing: 0;
        }

        .table td, .table th {
            padding: 1rem;
        }

        .product-thumbnail img {
            width: 60px;
            height: 60px;
        }

        .table h5 {
            font-size: 0.9rem;
        }

        .btn-remove-coupon {
            padding: 0.3rem 0.6rem;
            font-size: 0.75rem;
        }

        .payment_method {
            padding: 1rem;
        }
    }
</style>

<!-- Add AOS Library -->
<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        AOS.init({
            duration: 800,
            once: true
        });
    });
</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<!-- Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JS (including jQuery and Popper.js for the modal to work) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script>
    function copyCoupon(couponCode) {
        navigator.clipboard.writeText(couponCode)
            .then(function() {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Coupon Code Copied!',
                    text: couponCode,
                    showConfirmButton: false,
                    timer: 2000,
                    timerProgressBar: true
                });
            })
            .catch(function(err) {
                console.error('Error copying text:', err);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Failed to copy coupon code',
                    showConfirmButton: false,
                    timer: 2000,
                    timerProgressBar: true
                });
            });
    }
</script>

        <script>
            // Show the add address form
            function showAddAddressForm() {
                document.getElementById('addressForm').style.display = 'block';
            }

            // Hide the add address form
            function hideAddressForm() {
                document.getElementById('addressForm').style.display = 'none';
            }
        </script>

        <script>
          async function placeOrder() {
    document.getElementById('placeOrderBtn').addEventListener('click', function () {
        const selectedAddress = document.querySelector('input[name="selected_address"]:checked');
        const selectedPaymentOption = document.querySelector('input[name="payment_option"]:checked');
        const couponCode = document.getElementById('couponCode')?.value.trim(); // Get coupon code if available

        if (!selectedAddress || !selectedPaymentOption) {
            Swal.fire({
                icon: 'warning',
                title: 'Incomplete Information',
                text: 'Please select both an address and a payment option.',
                confirmButtonText: 'Okay'
            });
            return;
        }

        const data = {
            addressId: selectedAddress.value,
            paymentOption: selectedPaymentOption.value,
            couponCode: couponCode || null, // Include coupon code if provided
        };

        fetch('/order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    position: "top-end",
                    icon: 'success',
                    timer: 1500,
                    title: 'Order Placed Successfully',
                    text: data.message,
                    showConfirmButton: false,
                }).then(() => {
                    // window.location.href = '/order-success'; // Redirect to success page
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Order Failed',
                    text: 'Order failed. Please try again.',
                    confirmButtonText: 'Try Again'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Server Error',
                text: 'An error occurred while placing the order.',
                confirmButtonText: 'Close'
            });
        });
    });
}

placeOrder()
   async function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value;
    const orderValue = parseFloat(document.getElementById('orderValue').value); 
    const userId = document.getElementById('userId').value;
    try {
        const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, couponCode, orderValue })
        });
        const data = await response.json();

        if (response.ok) {
           
            document.getElementById("discountAmount").innerText = data.discount.toFixed(2);
            document.getElementById("finalTotal").innerText = data.finalPrice.toFixed(2);
            
            Swal.fire({
                icon: 'success',
                title: `Discount Applied! You saved ${data.discount.toFixed(2)}`,
                text: `Final Price: $${data.finalPrice.toFixed(2)}`,
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message,
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Unexpected Error',
            text: 'There was an error applying the coupon.',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
        });
    }
}

async function removeCoupon(userId) {
  try {
    const response = await fetch('/delete-coupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ userId: userId })  
    });

    const result = await response.json();

    if (response.ok) {
      document.getElementById("discountAmount").innerText = "0.00";
      document.getElementById("finalTotal").innerText = result.newTotal.toFixed(2);

      Swal.fire({
        icon: 'success',
        title: result.message || 'Coupon removed successfully',
        text: `New total: ‚Çπ${result.newTotal.toFixed(2)}`,
        toast: true,
        position: 'top-end',
        timer: 3000,
        timerProgressBar: true,
        showConfirmButton: false
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message,
        toast: true,
        position: 'top-end',
        timer: 3000,
        timerProgressBar: true,
        showConfirmButton: false
      });
    }
  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Severe error occurred',
      toast: true,
      position: 'top-end',
      timer: 3000,
      timerProgressBar: true,
      showConfirmButton: false
    });
  }
}
document.getElementById('onlinePayment').addEventListener('click', async function() {
    const selectedAddress = document.querySelector('input[name="selected_address"]:checked');
    const selectedPaymentOption = document.querySelector('input[name="payment_option"]:checked');
    const data = {
        addressId: selectedAddress.value,
    };

    try {
       
        const orderResponse = await fetch("/create-order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ amount:totalAmount })
        });
        const order = await orderResponse.json();

  
        const options = {
            key: "rzp_test_qT7pjheiiJYL7l",
            amount: order.amount,
            currency: "INR",
            name: "Test Company",
            description: "Test Transaction",
            order_id: order.id,
            handler: async function (response) {
       
                const verifyResponse = await fetch("/verify", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_signature: response.razorpay_signature,
                        data
                    }),
                });

                const verificationResult = await verifyResponse.json();
                
               
                if (verificationResult.status === "success") {
                 
                    Swal.fire({
                        position: 'top-right',
                        icon: 'success',
                        title: 'Payment verified and order placed successfully!',
                        showConfirmButton: false,
                        timer: 3000,
                        toast: true,
                        background: '#28a745',
                        color: '#fff',
                        animation: false 
                    });
window.location.href='/success'
               
                    placeOrder();
                } else {
                
                    Swal.fire({
                        position: 'top-right',
                        icon: 'error',
                        title: 'Payment verification failed.',
                        showConfirmButton: false,
                        timer: 3000,
                        toast: true,
                        background: '#dc3545', 
                        color: '#fff',
                    });
                }
            },
            prefill: {
                name: "vignesh",
                email: "vigneshkdr777@gmail.com",
                contact: "1234567890",
            },
        };

      
        const rzp1 = new Razorpay(options);
        rzp1.open();

    } catch (error) {
        console.error("Payment error:", error);
        alert("Payment failed. Please try again.");
    }
});




document.addEventListener('DOMContentLoaded', () => {
        const paymentOptions = document.getElementsByName('payment_option');
        const razorpayButtonContainer = document.getElementById('razorpayButtonContainer');
        const codButtonContainer = document.getElementById('codButtonContainer');

        // Function to toggle visibility based on selected option
        function updateButtonVisibility() {
            const selectedOption = [...paymentOptions].find(option => option.checked)?.value;
            if (selectedOption === 'razorpay') {
                razorpayButtonContainer.classList.remove('hidden');
                codButtonContainer.classList.add('hidden');
            } else {
                razorpayButtonContainer.classList.add('hidden');
                codButtonContainer.classList.remove('hidden');
            }
        }

        // Add event listeners to all payment options
        paymentOptions.forEach(option => {
            option.addEventListener('change', updateButtonVisibility);
        });

        // Initialize visibility on page load
        updateButtonVisibility();
    });
</script>

<%- include('../../views/partial/user/footer') %>
