<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../../views/partial/user/header', { user: user }) %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.1.9/sweetalert2.min.css" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Summary & Profile Sidebar</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
    <link rel="stylesheet" href="/evara-frontend/assets/css/myorder.css">
    <style>
        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            margin: 0;
            padding: 0;
        }

        .page-wrapper {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: linear-gradient(135deg, #f6f8fd 0%, #f1f4f9 100%);
            padding: 2rem 0;
        }

        .content-wrapper {
            flex: 1;
            width: 100%;
            max-width: 1680px;
            margin: 0 auto;
            padding: 0 32px;
        }

        .main-container {
            max-width: 1600px;
            width: 100%;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 280px minmax(950px, 1fr);
            gap: 32px;
            padding: 0 2rem;
        }

        .sidebar {
            min-width: 280px;
            background: rgba(255, 255, 255, 0.7);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.4);
            height: fit-content;
            position: sticky;
            top: 2rem;
        }

        .profile {
            text-align: center;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .profile img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #fff;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .profile span {
            display: block;
            margin-top: 1rem;
            color: #666;
            font-size: 0.9rem;
        }

        .profile h4 {
            margin: 0.5rem 0;
            color: #2c3e50;
            font-weight: 600;
        }

        .menu {
            list-style: none;
            padding: 0;
            margin: 1.5rem 0;
        }

        .menu li {
            margin-bottom: 0.5rem;
        }

        .menu a {
            display: flex;
            align-items: center;
            padding: 0.8rem 1rem;
            color: #2c3e50;
            text-decoration: none;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .menu a:hover, .menu a.active {
            background: linear-gradient(135deg, #00878a, #006d6f);
            color: white;
            transform: translateX(5px);
        }

        .menu i {
            margin-right: 1rem;
            width: 20px;
            text-align: center;
        }

        .logout button {
            width: 100%;
            padding: 0.8rem;
            border: none;
            border-radius: 10px;
            background: linear-gradient(135deg, #ff4757, #e0394c);
            transition: all 0.3s ease;
        }

        .logout button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(224, 57, 76, 0.2);
        }

        .logout a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            display: block;
        }

        .container {
            padding: 0;
            width: 100%;
            min-width: 950px;
            max-width: 1400px;
        }

        .order-item {
            background: #fff;
            border-radius: 4px;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
            border: 1px solid #e0e0e0;
        }

        .order-header {
            background: #2874f0;
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 4px 4px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .order-header-left {
            display: flex;
            align-items: center;
            gap: 2rem;
        }

        .order-date {
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.9rem;
        }

        .order-id {
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.9rem;
        }

        .product {
            display: grid;
            grid-template-columns: 120px minmax(500px, 1fr) 180px;
            gap: 24px;
            align-items: center;
            padding: 1.5rem 2rem;
            border-bottom: 1px solid #f0f0f0;
        }

        .product-image {
            width: 120px;
            height: 120px;
            object-fit: contain;
            background: #f7f7f7;
            padding: 0.5rem;
            border-radius: 4px;
        }

        .product-details {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            min-width: 500px;
            padding-right: 2rem;
        }

        .product-title {
            font-size: 1.1rem;
            font-weight: 500;
            color: #212121;
            margin: 0;
        }

        .product-info {
            color: #878787;
            font-size: 0.9rem;
            margin: 0;
        }

        .product-price {
            font-size: 1.2rem;
            font-weight: 500;
            color: #212121;
            margin: 0;
        }

        .order-status {
            padding: 1rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #fafafa;
        }

        .status-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #26a541;
            font-weight: 500;
        }

        .status-label i {
            font-size: 1.2rem;
        }

        .status-cancelled {
            color: #ff6161;
        }

        .order-footer {
            padding: 1rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top: 1px solid #f0f0f0;
        }

        .order-total {
            font-size: 1.1rem;
            font-weight: 500;
            color: #212121;
        }

        .cancel {
            padding: 0.6rem 1.5rem;
            border: none;
            border-radius: 4px;
            background: #fff;
            color: #2874f0;
            font-weight: 500;
            font-size: 1rem;
            cursor: pointer;
            border: 1px solid #2874f0;
            transition: all 0.3s ease;
        }

        .cancel:hover:not([disabled]) {
            background: #2874f0;
            color: #fff;
        }

        .cancel[disabled] {
            border-color: #c2c2c2;
            color: #c2c2c2;
            cursor: not-allowed;
        }

        .discount-tag {
            display: inline-block;
            padding: 0.2rem 0.5rem;
            background: #26a541;
            color: white;
            border-radius: 3px;
            font-size: 0.8rem;
            margin-left: 1rem;
        }

        .order-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            padding: 10px;
            border-top: 1px solid #eee;
        }

        .return-btn {
            background-color: #ff9f00;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

        .return-btn:hover {
            background-color: #ff8c00;
        }

        .return-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .download-invoice-btn {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            margin-left: 10px;
            transition: background-color 0.3s;
        }

        .download-invoice-btn:hover {
            background-color: #45a049;
        }

        .download-invoice-btn:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .download-invoice-btn i {
            margin-right: 5px;
        }

        @media (max-width: 1600px) {
            .main-container {
                grid-template-columns: 280px minmax(850px, 1fr);
            }
            
            .container {
                min-width: 850px;
            }

            .product {
                grid-template-columns: 120px minmax(400px, 1fr) 180px;
            }

            .product-details {
                min-width: 400px;
            }
        }

        @media (max-width: 1366px) {
            .content-wrapper {
                padding: 0 24px;
            }

            .main-container {
                grid-template-columns: 280px minmax(750px, 1fr);
                gap: 24px;
            }

            .container {
                min-width: 750px;
            }

            .product {
                grid-template-columns: 120px minmax(350px, 1fr) 150px;
            }

            .product-details {
                min-width: 350px;
            }
        }

        @media (max-width: 992px) {
            .main-container {
                grid-template-columns: 1fr;
                padding: 0 1rem;
            }

            .order-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .order-header-left {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }
        }

        @media (max-width: 768px) {
            .product {
                grid-template-columns: 80px 1fr;
                gap: 1rem;
            }

            .product-image {
                width: 80px;
                height: 80px;
            }

            .product-price {
                grid-column: 1 / -1;
                text-align: left;
                margin-top: 0.5rem;
            }

            .order-footer {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
        }
    </style>
</head>
<body>
    <div class="page-wrapper">
        <div class="content-wrapper">
            <div class="main-container">
                <div class="sidebar">
                    <div class="profile">
                        <img alt="Profile Picture" height="100" src="https://e7.pngegg.com/pngimages/136/22/png-clipart-user-profile-computer-icons-girl-customer-avatar-angle-heroes-thumbnail.png" width="100" />
                        <span>Hello</span>
                        <h4 class="p-1 text-black"><%= user.name %></h4>
                    </div>
                    <ul class="menu">
                        <li><a class="active" href="#"><i class="fas fa-user"></i> Account Overview</a></li>
                        <li><a href="/order"><i class="fas fa-box"></i> My Orders</a></li>
                        <li><a href="/manageAddress"><i class="fas fa-map-marker-alt"></i> Manage Addresses</a></li>
                        <li><a href="/wallet"><i class="fas fa-wallet"></i> Wallet</a></li>
                    </ul>
                    <div class="logout text-white">
                        <button><a href="/userLogout" class="border-rounded text-white">LOGOUT</a></button>
                    </div>
                </div>
                <div class="container">
                    <% if (Orders && Orders.length > 0) { %>
                      <% Orders.forEach(order => { %>
                        <div class="order-item">
                          <div class="order-header">
                            <div class="order-header-left">
                              <div class="order-date">
                                Ordered on <%= new Date(order.orderDate).toLocaleDateString('en-US', { 
                                  year: 'numeric', 
                                  month: 'long', 
                                  day: 'numeric' 
                                }) %>
                              </div>
                              <div class="order-id">Order #<%= order.oid %></div>
                            </div>
                            <% if (order.discount > 0) { %>
                              <div class="discount-tag">
                                Saved ₹<%= order.discount %>
                              </div>
                            <% } %>
                          </div>

                          <div class="product">
                            <% if (order.products && order.products.length > 0 && order.products[0].productId) { %>
                              <img 
                                src="<%= order.products[0].productId.images && order.products[0].productId.images.length > 0 
                                  ? '/uploads/re-image/' + order.products[0].productId.images[0] 
                                  : 'default_image.jpg' %>" 
                                alt="<%= order.products[0].productId.productName || 'Product Name' %>" 
                                class="product-image"/>
                              <div class="product-details">
                                <h3 class="product-title"><%= order.products[0].productId.productName || 'Product Name' %></h3>
                                <p class="product-info">
                                  Size: <%= order.products[0].size || 'Not Specified' %>
                                </p>
                              </div>
                              <div class="product-price">
                                ₹<%= order.products[0].price || 'N/A' %>
                              </div>
                            <% } else { %>
                              <p>No product details available.</p>
                            <% } %>
                          </div>

                          <div class="order-status">
                            <div class="status-label <%= order.status === 'Cancelled' ? 'status-cancelled' : '' %>">
                              <i class="fas <%= order.status === 'Cancelled' ? 'fa-times-circle' : 'fa-check-circle' %>"></i>
                              <%= order.status %>
                            </div>
                          </div>

                          <div class="order-actions">
                            <% if (order.status === 'Delivered') { %>
                              <button 
                                onclick="returnOrder('<%= order.oid %>')" 
                                class="return-btn"
                                <%= Date.now() - new Date(order.orderDate).getTime() > 7 * 24 * 60 * 60 * 1000 ? 'disabled' : '' %>
                              >
                                Return Order
                              </button>
                              <button 
                                onclick="downloadInvoice('<%= order.oid %>')" 
                                class="download-invoice-btn"
                              >
                                <i class="fas fa-file-download"></i> Download Invoice
                              </button>
                            <% } %>
                          </div>

                          <div class="order-footer">
                            <div class="order-total">
                              <strong>Total:</strong> ₹<%= order.total %>
                            </div>
                            <% if (order.status !== 'Cancelled') { %>
                              <form action="/order/cancel" method="POST">
                                <input type="hidden" name="orderId" value="<%= order.oid %>">
                                <button 
                                  type="submit" 
                                  class="cancel" 
                                  <% if (order.status === 'Cancelled' || order.status === 'Returned') { %> 
                                    disabled 
                                  <% } %>>
                                  Cancel Order
                                </button>
                              </form>
                            <% } %>
                          </div>
                        </div>
                      <% }) %>
                    <% } else { %>
                      <div class="order-item" style="text-align: center; padding: 2rem;">
                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-cp-zion/img/emptyOrders_3f3c6a.png" 
                             alt="No orders" 
                             style="width: 150px; margin-bottom: 1rem;">
                        <p style="color: #212121; font-size: 1.2rem; margin-bottom: 0.5rem;">No Orders Yet</p>
                        <p style="color: #878787; margin-bottom: 1rem;">When you place your first order, it will appear here</p>
                        <a href="/" class="cancel" style="text-decoration: none; display: inline-block;">Start Shopping</a>
                      </div>
                    <% } %>
                  </div>
            </div>
        </div>
    </div>
    <%- include('../../views/partial/user/footer') %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.1.9/sweetalert2.all.min.js"></script>
    <script>
        async function cancelOrder(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/order/cancel`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: orderId })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            Swal.fire('Cancelled!', data.message, 'success');
                            document.getElementById('orderStatus').innerText = 'Cancelled';
                        } else {
                            Swal.fire('Error!', data.message, 'error');
                        }
                    } catch (error) {
                        console.error('Error canceling order:', error);
                        Swal.fire('Error!', 'Something went wrong. Please try again.', 'error');
                    }
                }
            });
        }

        async function returnOrder(orderId) {
            try {
                const result = await Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'question',
                    title: `Return order #${orderId}?`,
                    showCancelButton: true,
                    confirmButtonColor: '#ff9f00',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    timer: 5000,
                    timerProgressBar: true
                });

                if (result.isConfirmed) {
                    const response = await fetch('/return-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ orderId })
                    });

                    const data = await response.json();

                    if (data.success) {
                        await Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Order returned successfully',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                        location.reload();
                    } else {
                        throw new Error(data.message || 'Failed to return order');
                    }
                }
            } catch (error) {
                console.error('Error returning order:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'Failed to return order',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        }

        async function downloadInvoice(orderId) {
            try {
                const response = await fetch(`/download-invoice/${orderId}`);
                
                if (!response.ok) {
                    throw new Error('Failed to download invoice');
                }

                // Check if the response is a PDF
                const contentType = response.headers.get('content-type');
                if (contentType && contentType.includes('application/pdf')) {
                    // Create a blob from the PDF stream
                    const blob = await response.blob();
                    // Create a link to download the PDF
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `invoice-${orderId}.pdf`;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                } else {
                    throw new Error('Invalid invoice format');
                }
            } catch (error) {
                console.error('Error downloading invoice:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Failed to download invoice',
                    text: error.message,
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        }
    </script>
</body>
</html>
