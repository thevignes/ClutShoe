<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Product</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<%- include("../../views/partial/admin/header") %>

  <style>
    
    body {
      background-color: #f7f9fc;
    }
    .form-container {
      margin-top: 30px;
      padding: 20px;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
    }
    .page-header {
      text-align: center;
      margin-bottom: 30px;
      font-size: 28px;
      font-weight: 600;
    }
    .product-image {
      max-width: 200px;
      max-height: 200px;
      display: block;
      margin-bottom: 15px;
    }
  </style>
</head>
<body>

  <div class="container form-container">
    <h2 class="page-header">Edit Product</h2>
    
    <form action="/admin/updateProduct/<%= product._id %>" method="post" enctype="multipart/form-data">
      <div class="mb-3">
        <label for="productName" class="form-label">Product Name</label>
        <input type="text" class="form-control" id="productName" name="productName" value="<%= product.productName %>" required>
 
      

      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" rows="3" required><%= product.description %></textarea>
      </div>

      <div class="mb-3">
        <label for="regularPrice" class="form-label">Regular Price</label>
        <input type="number" class="form-control" id="regularPrice" name="regularPrice" value="<%= product.regularPrice %>" required>
      </div>

      <div class="mb-3">
        <label for="salePrice" class="form-label">Sale Price</label>
        <input type="number" class="form-control" id="salePrice" name="salePrice" value="<%= product.salePrice %>" required>
      </div>

      <div class="mb-3">
        <label for="quantity" class="form-label">Quantity</label>
        <input type="number" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" required>
      </div>



      <div class="mb-3">
        <label for="category" class="form-label">Category</label>
        <select class="form-select" id="category" name="category" required>
          <% cate.forEach(function(Category) { %>
            <option value="<%= Category._id %>" <%= product.category && product.category._id.toString() === Category._id.toString() ? 'selected' : '' %>><%= Category.name %></option>
          <% }) %>
        </select>
      </div>

      <% if (product.images && product.images.length > 0) { %>
        <div class="mb-3 d-felx " style="flex-direction: row;">
          <label class="form-label">Current Product Images</label>
          <div class="product-images d-flex flex-wrap">
            <% product.images.map(function(image, index) { %>
           
              <div class="image-container me-3 mb-3">
                <img src="/uploads/re-image/<%= image %>" alt="Product Image" class="product-image img-thumbnail">
                <form action="/admin/removeImage/<%= product._id %>?imageName=<%= image %>" method="post" style="display: block;">
                  <button type="submit" class="btn btn-danger btn-sm mt-2">Remove</button>


                </form>
                <div class="row">
                  <div class="card-body align-items-center" style="margin-bottom: 20px;">
                      <img src="" alt="product image1" id="imgView1">
                                                  <input class="form-control" type="file" name="images" id="input1"
                                                      accept="image/png, image/jpeg, image/jpg"
                                                      onchange="viewImage(event), viewImage(event, 1)">
                                                      <div id="images-error" class="error-message"></div>
                                              </div>
                                              <div class="image-cropper d-flex align-items-center"
                                                  style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                  <img src="" id="croppedImg1" alt="">
                                                  <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                              </div>
                                          </div>
              </div>
              <% }) %>
          </div>
        </div>
      <% } %>
      

  <button type="submit" class="btn btn-primary">Update Product</button>
  <a href="/admin/product" class="btn btn-secondary">Cancel</a>
</form>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<!-- 
<script>
  
  function deleteSingleImage(imageId, productId) {

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to delete this image? This action cannot be undone.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
 
            $.ajax({
                url: "/deleteSingleImage",
                method: 'post',
                data: {
                    imagesId: imageId, 
                    ProductId: productId 
                },
                success: (response) => {
                    if (response.status === true) {
               
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'The image has been deleted successfully.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                  
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to delete image.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: (xhr, status, error) => {
                    console.error('Error deleting image:', error);
e
                    Swal.fire({
                        title: 'Error',
                        text: 'Failed to delete image. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }
    });
}

</script> -->
<script>

let cropper; 
      

      function viewImage(event, index) {
          let input = event.target;
          let reader = new FileReader();
          reader.onload = function () {
              let dataURL = reader.result;
              let image = document.getElementById('imgView' + index);
              image.src = dataURL;
      
              if (cropper) {
                  cropper.destroy();
              }
      
              cropper = new Cropper(image, {
                  aspectRatio: 1,
                  viewMode: 1,
                  background: false,
                  autoCropArea: 1,
                  zoomable: true,
              });
      
              let saveButton = document.querySelector('#saveButton' + index);
              saveButton.addEventListener('click', async function () {
                  let croppedCanvas = cropper.getCroppedCanvas();
                  let croppedImage = document.getElementById('croppedImg' + index);
                  croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
      
                  let timestamp = new Date().getTime();
                  let fileName = `cropped-img-${timestamp}-${index}.png`;
      
                  await croppedCanvas.toBlob(blob => {
                      let imgFile = new File([blob], fileName, { type: blob.type });
                      let fileList = new DataTransfer();
                      fileList.items.add(imgFile);
                      input.files = fileList.files;
                  });
      
                  cropper.destroy();
                  cropper = null;
              });
          };
          reader.readAsDataURL(input.files[0]);
      }








document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');
    
    form.addEventListener('submit', function (event) {
      let isValid = true;
      const errorMessages = [];

      // Product Name validation
      const productName = document.getElementById('productName').value.trim();
      if (productName.length < 3) {
        isValid = false;
        errorMessages.push('Product Name should be at least 3 characters long.');
      }

      // Description validation
      const description = document.getElementById('description').value.trim();
      if (description.length < 10) {
        isValid = false;
        errorMessages.push('Description should be at least 10 characters long.');
      }

      // Regular Price validation
      const regularPrice = document.getElementById('regularPrice').value;
      if (regularPrice <= 0) {
        isValid = false;
        errorMessages.push('Regular Price should be greater than 0.');
      }

      // Sale Price validation
      const salePrice = document.getElementById('salePrice').value;
      if (salePrice < 0) {
        isValid = false;
        errorMessages.push('Sale Price cannot be negative.');
      }

      // Quantity validation
      const quantity = document.getElementById('quantity').value;
      if (quantity < 1) {
        isValid = false;
        errorMessages.push('Quantity should be at least 1.');
      }

      // Category validation
      const category = document.getElementById('category').value;
      if (!category) {
        isValid = false;
        errorMessages.push('Please select a category.');
      }

      // Display error messages if validation fails
      if (!isValid) {
        event.preventDefault();
        alert(errorMessages.join('\n'));
      }
    });
  });

  
  document.querySelector('form').addEventListener('submit', function (e) {
    e.preventDefault(); // This will prevent the form from submitting
});

</script>



<%- include("../../views/partial/admin/footer") %>
